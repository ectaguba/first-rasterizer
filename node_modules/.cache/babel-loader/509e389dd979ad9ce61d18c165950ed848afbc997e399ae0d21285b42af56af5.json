{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/react_exercises_for_beginners/src/App10/App10.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App10() {\n  _s();\n  const [img, setImg] = useState(\"\");\n  const handleButtonClick = async () => {\n    let response = await fetch('https://dog.ceo/api/breeds/image/random');\n    let data = await response.json();\n    if (data.status === \"success\") {\n      setImg(data.message);\n    } else {\n      setImg(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Get Random Dog Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), img ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"Dog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Get dog image failed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App10, \"61eStkbSS1/Dp9pN1rSRlr4qVeI=\");\n_c = App10;\nexport default App10;\nvar _c;\n$RefreshReg$(_c, \"App10\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App10","_s","img","setImg","handleButtonClick","response","fetch","data","json","status","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/react_exercises_for_beginners/src/App10/App10.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App10() {\n\n  const [img, setImg] = useState(\"\");\n  \n  const handleButtonClick = async () => {\n    let response = await fetch('https://dog.ceo/api/breeds/image/random');\n    let data = await response.json();\n    \n    if (data.status === \"success\") {\n      setImg(data.message);\n    } else {\n      setImg(false);\n    }\n  }\n\n  return (\n    <main>\n      <button onClick={handleButtonClick}>Get Random Dog Image</button>\n      <br />\n      <br />\n      {img \n        ? (\n          <img src={img} alt=\"Dog\"></img>\n        )\n        : (\n          <p>Get dog image failed</p>\n        )\n      }\n    </main>\n  );\n}\n\nexport default App10;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;IACrE,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEhC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;MAC7BN,MAAM,CAACI,IAAI,CAACG,OAAO,CAAC;IACtB,CAAC,MAAM;MACLP,MAAM,CAAC,KAAK,CAAC;IACf;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQa,OAAO,EAAER,iBAAkB;MAAAO,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLd,GAAG,gBAEAH,OAAA;MAAKkB,GAAG,EAAEf,GAAI;MAACgB,GAAG,EAAC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAG/BjB,OAAA;MAAAY,QAAA,EAAG;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEX;AAACf,EAAA,CA9BQD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}