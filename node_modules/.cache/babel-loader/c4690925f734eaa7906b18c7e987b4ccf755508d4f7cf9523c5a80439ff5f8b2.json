{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasSize = {\n    x: 640,\n    y: 480\n  };\n  const defaultP0 = new Pixel(0, 0);\n  const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n  const [lineArr, setLines] = useState([new Line(defaultP0, defaultP1)]);\n  const addLineField = () => {\n    setLines([...lines, new Line(defaultP0, defaultP1)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Rasterizer in the Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      width: canvasSize.x,\n      height: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), lines.map((item, index) => /*#__PURE__*/_jsxDEV(LineField, {\n      lines: lines,\n      setLines: setLines,\n      canvasWidth: canvasSize.x,\n      canvasHeight: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"78gD1iQY/E/sq/xWbv6NSYkBS9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","LineField","Pixel","Line","jsxDEV","_jsxDEV","App","_s","canvasSize","x","y","defaultP0","defaultP1","lineArr","setLines","addLineField","lines","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","map","item","index","canvasWidth","canvasHeight","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\n\nconst App: React.FC = () => {\n\n    const canvasSize = { x: 640, y: 480 };\n\n    const defaultP0 = new Pixel(0, 0);\n    const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n\n    const [lineArr, setLines] = useState<Line[]>([new Line(defaultP0, defaultP1)]);\n\n    const addLineField = (): void => {\n        setLines([...lines, new Line(defaultP0, defaultP1)]);\n    }\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas\n                width={canvasSize.x}\n                height={canvasSize.y}\n            />\n            {lines.map((item: Line, index: number) => (\n                <LineField\n                    lines={lines}\n                    setLines={setLines}\n                    canvasWidth={canvasSize.x}\n                    canvasHeight={canvasSize.y}\n                />\n            ))}\n            {/* <button type=\"button\" onClick={handleAddLine}>\n                Add Line\n            </button> */}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,IAAI,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAMC,UAAU,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAErC,MAAMC,SAAS,GAAG,IAAIT,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACjC,MAAMU,SAAS,GAAG,IAAIV,KAAK,CAACM,UAAU,CAACC,CAAC,GAAG,CAAC,EAAED,UAAU,CAACE,CAAC,GAAG,CAAC,CAAC;EAE/D,MAAM,CAACG,OAAO,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAS,CAAC,IAAII,IAAI,CAACQ,SAAS,EAAEC,SAAS,CAAC,CAAC,CAAC;EAE9E,MAAMG,YAAY,GAAGA,CAAA,KAAY;IAC7BD,QAAQ,CAAC,CAAC,GAAGE,KAAK,EAAE,IAAIb,IAAI,CAACQ,SAAS,EAAEC,SAAS,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,oBACIP,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAIa,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DlB,OAAA,CAACL,MAAM;MACHwB,KAAK,EAAEhB,UAAU,CAACC,CAAE;MACpBgB,MAAM,EAAEjB,UAAU,CAACE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACDP,KAAK,CAACU,GAAG,CAAC,CAACC,IAAU,EAAEC,KAAa,kBACjCvB,OAAA,CAACJ,SAAS;MACNe,KAAK,EAAEA,KAAM;MACbF,QAAQ,EAAEA,QAAS;MACnBe,WAAW,EAAErB,UAAU,CAACC,CAAE;MAC1BqB,YAAY,EAAEtB,UAAU,CAACE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAID,CAAC;AAEd,CAAC;AAAChB,EAAA,CAjCID,GAAa;AAAAyB,EAAA,GAAbzB,GAAa;AAmCnB,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}