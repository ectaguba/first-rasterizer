{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/react_exercises_for_beginners/src/App11/components/WeatherResults/WeatherResults.jsx\";\nimport React, { useState } from \"react\";\nimport styles from \"./WeatherResults.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherResults(props) {\n  const {\n    loading,\n    results,\n    error\n  } = props;\n  if (error) return;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.LoadingMessage,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  } else if (!loading && results) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.WeatherResults,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Temperature: \", results.temperature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Wind: \", results.wind]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", results.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), Object.keys(results.forecast).map(forecastKey => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Day: \", forecastKey.day]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", forecastKey.temperature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind: \", forecastKey.wind]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = WeatherResults;\nexport default WeatherResults;\nvar _c;\n$RefreshReg$(_c, \"WeatherResults\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","WeatherResults","props","loading","results","error","className","LoadingMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","wind","description","Object","keys","forecast","map","forecastKey","day","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/react_exercises_for_beginners/src/App11/components/WeatherResults/WeatherResults.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport styles from \"./WeatherResults.module.css\";\n\nfunction WeatherResults(props) {\n\n    const { loading, results, error } = props;\n    \n    if (error) return;\n\n    if (loading) {\n        return <h2 className={styles.LoadingMessage}>Loading...</h2>;\n    } else if (!loading && results) {\n        return (\n            <ul className={styles.WeatherResults}>\n                <li>Temperature: {results.temperature}</li>\n                <li>Wind: {results.wind}</li>\n                <li>Description: {results.description}</li>\n                {Object.keys(results.forecast).map((forecastKey) => {\n                    <li>\n                        <p>Day: {forecastKey.day}</p>\n                        <p>Temperature: {forecastKey.temperature}</p>\n                        <p>Wind: {forecastKey.wind}</p>\n                    </li>\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default WeatherResults;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,cAAcA,CAACC,KAAK,EAAE;EAE3B,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAEzC,IAAIG,KAAK,EAAE;EAEX,IAAIF,OAAO,EAAE;IACT,oBAAOH,OAAA;MAAIM,SAAS,EAAER,MAAM,CAACS,cAAe;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChE,CAAC,MAAM,IAAI,CAACT,OAAO,IAAIC,OAAO,EAAE;IAC5B,oBACIJ,OAAA;MAAIM,SAAS,EAAER,MAAM,CAACG,cAAe;MAAAO,QAAA,gBACjCR,OAAA;QAAAQ,QAAA,GAAI,eAAa,EAACJ,OAAO,CAACS,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3CZ,OAAA;QAAAQ,QAAA,GAAI,QAAM,EAACJ,OAAO,CAACU,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BZ,OAAA;QAAAQ,QAAA,GAAI,eAAa,EAACJ,OAAO,CAACW,WAAW;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1CI,MAAM,CAACC,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAACC,GAAG,CAAEC,WAAW,IAAK;QAChD,aAAApB,OAAA;UAAAQ,QAAA,gBACIR,OAAA;YAAAQ,QAAA,GAAG,OAAK,EAACY,WAAW,CAACC,GAAG;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BZ,OAAA;YAAAQ,QAAA,GAAG,eAAa,EAACY,WAAW,CAACP,WAAW;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CZ,OAAA;YAAAQ,QAAA,GAAG,QAAM,EAACY,WAAW,CAACN,IAAI;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MACT,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEb;AACJ;AAACU,EAAA,GAxBQrB,cAAc;AA0BvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}