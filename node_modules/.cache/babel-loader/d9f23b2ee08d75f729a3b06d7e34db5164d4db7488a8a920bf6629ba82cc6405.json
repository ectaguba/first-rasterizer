{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  width,\n  height\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      if (context) {\n        // // Draw a red pixel at coordinates (10, 10)\n        // context.fillStyle = 'red';\n        // context.fillRect(10, 10, 1, 1);\n\n        // // Draw more pixels as needed\n        // // context.fillRect(x, y, 1, 1);\n      }\n    }\n  }, [width, height]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    style: {\n      border: \"1px solid black\",\n      margin: \"auto\",\n      display: \"block\"\n    },\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","width","height","_s","canvasRef","current","context","getContext","style","border","margin","display","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\ninterface PixelCanvasProps {\n  width: number;\n  height: number;\n}\n\nconst Canvas: React.FC<PixelCanvasProps> = ({ width, height }) => {\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n\n      if (context) {\n        // // Draw a red pixel at coordinates (10, 10)\n        // context.fillStyle = 'red';\n        // context.fillRect(10, 10, 1, 1);\n\n        // // Draw more pixels as needed\n        // // context.fillRect(x, y, 1, 1);\n        \n      }\n    }\n  }, [width, height]);\n\n  return <canvas style={{border: \"1px solid black\", margin: \"auto\", display: \"block\"}} ref={canvasRef} width={width} height={height} />;\n};\n\nexport default Canvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOjD,MAAMC,MAAkC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEhE,MAAMC,SAAS,GAAGR,MAAM,CAA2B,IAAI,CAAC;EAGxDC,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,OAAO,GAAGF,SAAS,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAElD,IAAID,OAAO,EAAE;QACX;QACA;QACA;;QAEA;QACA;MAAA;IAGJ;EACF,CAAC,EAAE,CAACL,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,oBAAOH,OAAA;IAAQS,KAAK,EAAE;MAACC,MAAM,EAAE,iBAAiB;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAACC,GAAG,EAAER,SAAU;IAACH,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvI,CAAC;AAACb,EAAA,CAtBIH,MAAkC;AAAAiB,EAAA,GAAlCjB,MAAkC;AAwBxC,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}