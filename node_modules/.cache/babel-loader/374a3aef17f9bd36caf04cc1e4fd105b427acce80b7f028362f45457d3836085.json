{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineTest.tsx\";\nimport { Pixel } from \"./Pixel.tsx\";\nimport { Line } from \"./Line.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineTest = () => {\n  const lineArr = [new Line(new Pixel(0, 0), new Pixel(10, 10)), new Line(new Pixel(0, 0), new Pixel(20, 20))];\n  const handleChangeLine = (index, point, axis, value) => {\n    const updatedLines = lineArr.map((line, i) => {\n      return i === index ? line.updatePoint(point, axis, value) : line;\n    });\n  };\n  handleChangeLine(0, 0, 'x', 5);\n  handleChangeLine(0, 0, 'y', 5);\n  handleChangeLine(0, 1, 'x', 15);\n  handleChangeLine(0, 1, 'y', 15);\n  handleChangeLine(1, 0, 'x', 18);\n  handleChangeLine(1, 0, 'y', 18);\n  handleChangeLine(1, 1, 'x', 25);\n  handleChangeLine(1, 1, 'y', 25);\n  console.log(lineArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = LineTest;\nexport default LineTest;\nvar _c;\n$RefreshReg$(_c, \"LineTest\");","map":{"version":3,"names":["Pixel","Line","React","jsxDEV","_jsxDEV","LineTest","lineArr","handleChangeLine","index","point","axis","value","updatedLines","map","line","i","updatePoint","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineTest.tsx"],"sourcesContent":["import {Pixel} from \"./Pixel.tsx\"\nimport {Line} from \"./Line.tsx\"\nimport React from \"react\";\n\nconst LineTest = () => {\n    const lineArr: Line[] = [\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(10, 10)\n        ),\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(20, 20)\n        ),\n    ];\n    \n    const handleChangeLine = (index: number, point: number, axis: string, value: number): void => {\n        const updatedLines = lineArr.map((line, i) => {\n            return i === index \n                ? line.updatePoint(point, axis, value) \n                : line\n        });\n    };\n    \n    handleChangeLine(0, 0, 'x', 5);\n    handleChangeLine(0, 0, 'y', 5);\n    \n    handleChangeLine(0, 1, 'x', 15);\n    handleChangeLine(0, 1, 'y', 15);\n    \n    handleChangeLine(1, 0, 'x', 18);\n    handleChangeLine(1, 0, 'y', 18);\n    \n    handleChangeLine(1, 1, 'x', 25);\n    handleChangeLine(1, 1, 'y', 25);\n    \n    console.log(lineArr);\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default LineTest;"],"mappings":";AAAA,SAAQA,KAAK,QAAO,aAAa;AACjC,SAAQC,IAAI,QAAO,YAAY;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,OAAe,GAAG,CACpB,IAAIL,IAAI,CACJ,IAAID,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACf,IAAIA,KAAK,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC,EACD,IAAIC,IAAI,CACJ,IAAID,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACf,IAAIA,KAAK,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC,CACJ;EAED,MAAMO,gBAAgB,GAAGA,CAACC,KAAa,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa,KAAW;IAC1F,MAAMC,YAAY,GAAGN,OAAO,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MAC1C,OAAOA,CAAC,KAAKP,KAAK,GACZM,IAAI,CAACE,WAAW,CAACP,KAAK,EAAEC,IAAI,EAAEC,KAAK,CAAC,GACpCG,IAAI;IACd,CAAC,CAAC;EACN,CAAC;EAEDP,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAE9BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAC/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAE/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAC/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAE/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAC/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAE/BU,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;EACpB,oBACIF,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAAC,EAAA,GAtCKlB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}