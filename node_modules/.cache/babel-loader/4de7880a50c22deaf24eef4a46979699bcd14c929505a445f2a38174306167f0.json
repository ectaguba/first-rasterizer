{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Pixel } from './Pixel.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineField = ({\n  lineIndex,\n  handleChangeLine\n}) => {\n  _s();\n  const [point0, setPoint0] = useState(new Pixel(0, 0));\n  const [point1, setPoint1] = useState(new Pixel(0, 0));\n  const [color, setColor] = useState('#000000');\n  console.log(`${point0.xpoint0.y}, ${(point1.x, point1.y)}`);\n  const handleX0Change = e => {\n    setPoint0(prevPoint0 => new Pixel(Number(e.target.value), prevPoint0.y));\n    handleChangeLine(lineIndex, 0, \"x\", Number(e.target.value));\n  };\n  const handleY0Change = e => {\n    setPoint0(prevPoint0 => new Pixel(prevPoint0.x, Number(e.target.value)));\n    handleChangeLine(lineIndex, 0, \"y\", Number(e.target.value));\n  };\n  const handleX1Change = e => {\n    setPoint1(prevPoint1 => new Pixel(Number(e.target.value), prevPoint1.y));\n    handleChangeLine(lineIndex, 1, \"x\", Number(e.target.value));\n  };\n  const handleY1Change = e => {\n    setPoint1(prevPoint1 => new Pixel(prevPoint1.x, Number(e.target.value)));\n    handleChangeLine(lineIndex, 1, \"y\", Number(e.target.value));\n  };\n  const handleColorChange = e => {\n    setColor(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"LineField\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: point0.x,\n          onChange: handleX0Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: point0.y,\n          onChange: handleY0Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: point1.x,\n          onChange: handleX1Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: point1.y,\n          onChange: handleY1Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(LineField, \"qbCXqdYpDGSK0ZczSh1CdaskwOc=\");\n_c = LineField;\nexport default LineField;\nvar _c;\n$RefreshReg$(_c, \"LineField\");","map":{"version":3,"names":["React","useState","Pixel","jsxDEV","_jsxDEV","LineField","lineIndex","handleChangeLine","_s","point0","setPoint0","point1","setPoint1","color","setColor","console","log","xpoint0","y","x","handleX0Change","e","prevPoint0","Number","target","value","handleY0Change","handleX1Change","prevPoint1","handleY1Change","handleColorChange","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Pixel } from './Pixel.tsx';\nimport { Line } from './Line.tsx';\n\ninterface LineFieldProps {\n    lineIndex: number;\n    handleChangeLine: (\n        index: number, \n        point: string | number,\n        axis: string,  \n        value: number\n    ) => void;\n}\n\nconst LineField: React.FC<LineFieldProps> = ({ lineIndex, handleChangeLine }) => {\n\n    const [point0, setPoint0] = useState<Pixel>(new Pixel(0, 0));\n    const [point1, setPoint1] = useState<Pixel>(new Pixel(0, 0));\n    const [color, setColor] = useState<string>('#000000');\n\n    console.log(`${point0.xpoint0.y}, ${point1.x, point1.y}`)\n    const handleX0Change = (e): void => {\n        setPoint0((prevPoint0) => new Pixel(Number(e.target.value), prevPoint0.y));\n        handleChangeLine(\n            lineIndex, \n            0,\n            \"x\",\n            Number(e.target.value)\n        )\n    }\n\n    const handleY0Change = (e): void => {\n        setPoint0((prevPoint0) => new Pixel(prevPoint0.x, Number(e.target.value)));\n        handleChangeLine(\n            lineIndex, \n            0,\n            \"y\",\n            Number(e.target.value)\n        );\n    }\n\n    const handleX1Change = (e): void => {\n        setPoint1((prevPoint1) => new Pixel(Number(e.target.value), prevPoint1.y));\n        handleChangeLine(\n            lineIndex, \n            1,\n            \"x\",\n            Number(e.target.value)\n        )\n    }\n\n    const handleY1Change = (e): void => {\n        setPoint1((prevPoint1) => new Pixel(prevPoint1.x, Number(e.target.value)));\n        handleChangeLine(\n            lineIndex, \n            1,\n            \"y\",\n            Number(e.target.value)\n        )\n    }\n\n    const handleColorChange = (e): void => {\n        setColor(e.target.value);\n    }\n    \n    return (\n        <form className=\"LineField\">\n            <div>\n                <label>\n                    {/* Initial x */}\n                    x0:\n                    <input\n                        type=\"text\"\n                        value={point0.x}\n                        onChange={handleX0Change}\n                    />\n                </label>\n                <label>\n                    {/* Initial y */}\n                    y0:\n                    <input\n                        type=\"text\"\n                        value={point0.y}\n                        onChange={handleY0Change}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    {/* Final x */}\n                    x1:\n                    <input\n                        type=\"text\"\n                        value={point1.x}\n                        onChange={handleX1Change}\n                    />\n                </label>\n                <label>\n                    {/* Final y */}\n                    y1:\n                    <input\n                        type=\"text\"\n                        value={point1.y}\n                        onChange={handleY1Change}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Color:\n                    <input type=\"color\" value={color} onChange={handleColorChange} />\n                </label>\n            </div>\n        </form>\n    );\n}\n\nexport default LineField;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}