{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from \"./components/Canvas.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasSize = {\n    x: 640,\n    y: 480\n  };\n  const defaultP0 = new Pixel(0, 0);\n  const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n  const [lines, setLines] = useState([new Line(defaultP0, defaultP1)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Rasterizer in the Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      width: canvasSize.x,\n      height: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddLine,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"1NIKS91+EdTy+2N5FH/n09xtLXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","Pixel","Line","jsxDEV","_jsxDEV","App","_s","canvasSize","x","y","defaultP0","defaultP1","lines","setLines","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","type","onClick","handleAddLine","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\n\nconst App: React.FC = () => {\n\n    const canvasSize = {x: 640, y: 480};\n    const defaultP0 = new Pixel(0,0);\n    const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n    const [lines, setLines] = useState<Line[]>([new Line(defaultP0, defaultP1)]);\n    \n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas \n                width={canvasSize.x} \n                height={canvasSize.y} \n            />\n            \n            <button type=\"button\" onClick={handleAddLine}>\n                Add Line\n            </button>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,IAAI,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAMC,UAAU,GAAG;IAACC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EACnC,MAAMC,SAAS,GAAG,IAAIT,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;EAChC,MAAMU,SAAS,GAAG,IAAIV,KAAK,CAACM,UAAU,CAACC,CAAC,GAAG,CAAC,EAAED,UAAU,CAACE,CAAC,GAAG,CAAC,CAAC;EAC/D,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,CAAC,IAAIG,IAAI,CAACQ,SAAS,EAAEC,SAAS,CAAC,CAAC,CAAC;EAE5E,oBACIP,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAIW,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DhB,OAAA,CAACJ,MAAM;MACHqB,KAAK,EAAEd,UAAU,CAACC,CAAE;MACpBc,MAAM,EAAEf,UAAU,CAACE;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEFhB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEC,aAAc;MAAAX,QAAA,EAAC;IAE9C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACd,EAAA,CApBID,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AAsBnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}