{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasSize = {\n    x: 640,\n    y: 480\n  };\n  const [lineArr, setLineArr] = useState([new Line(new Pixel(0, 0), new Pixel(0, 0))]);\n  const handleChangeLine = (index, point, property, value) => {\n    // return new array to re-render\n    setLineArr(prevLineArr => {\n      const updatedLines = prevLineArr.map((line, i) => {\n        if (i === index) {\n          return line.updatePoint(point, property, value);\n        } else {\n          return line;\n        }\n      });\n      return updatedLines;\n    });\n  };\n  const handleAddLine = () => {\n    // initialize new pixel and line objects\n    const newLine = new Line(new Pixel(0, 0), new Pixel(0, 0));\n    // insert into existing array\n    setLineArr(prevLineArr => [...prevLineArr, newLine]);\n  };\n  const printLines = () => {\n    console.log(\"printLines:\");\n    lineArr.map((item, index) => {\n      console.log(`Line ${index}`);\n      console.log(`(x0: ${item.p0.x}, y0: ${item.p0.y}, color0: [${item.p0.color}], h0: ${item.p0.h})`);\n      console.log(`(x1: ${item.p1.x}, y1: ${item.p1.y}, color1: [${item.p1.color}], h1: ${item.p0.h})`);\n    });\n  };\n  for (let i = 0; i < lineArr.length; i++) {\n    console.log(`lineArr Line ${i}`);\n    console.log(`(x0: ${lineArr[i].p0.x}, y0: ${lineArr[i].p0.y}, color0: [${lineArr[i].p0.color}], h0: ${lineArr[i].p0.h})`);\n    console.log(`(x1: ${lineArr[i].p1.x}, y1: ${lineArr[i].p1.y}, color1: [${lineArr[i].p1.color}], h1: ${lineArr[i].p0.h})`);\n    console.log(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Rasterizer in the Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      lineArr: lineArr,\n      width: canvasSize.x,\n      height: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), lineArr.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LineField, {\n        lineIndex: index,\n        line: item,\n        handleChangeLine: handleChangeLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddLine,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printLines,\n      children: \"Print Lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NdjLx/5xoX967vdn77FnohRqQOw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","LineField","Pixel","Line","jsxDEV","_jsxDEV","App","_s","canvasSize","x","y","lineArr","setLineArr","handleChangeLine","index","point","property","value","prevLineArr","updatedLines","map","line","i","updatePoint","handleAddLine","newLine","printLines","console","log","item","p0","color","h","p1","length","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","Fragment","lineIndex","type","onClick","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport LineTest from './components/LineTest.tsx';\n\nconst App: React.FC = () => {\n\n    const canvasSize = { x: 640, y: 480 };\n\n    const [lineArr, setLineArr] = useState<Line[]>([\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(0, 0)\n        )\n    ]);\n\n    const handleChangeLine = (\n        index: number, \n        point: number, \n        property: 'x' | 'y' | 'h' | 'color', \n        value: string | number\n    ): void => {\n        // return new array to re-render\n        setLineArr((prevLineArr) => {\n            const updatedLines = prevLineArr.map((line, i) => {\n                if (i === index) {\n                    return line.updatePoint(point, property, value);\n                } else {\n                    return line;\n                }\n            });\n            return updatedLines;\n        });\n    };\n\n    const handleAddLine = (): void => {\n        // initialize new pixel and line objects\n        const newLine = new Line(new Pixel(0, 0), new Pixel(0, 0));\n        // insert into existing array\n        setLineArr((prevLineArr) => [...prevLineArr, newLine]);\n    }\n\n    const printLines = (): void => {\n        console.log(\"printLines:\")\n        lineArr.map((item, index) => {\n            console.log(`Line ${index}`);\n            console.log(`(x0: ${item.p0.x}, y0: ${item.p0.y}, color0: [${item.p0.color}], h0: ${item.p0.h})`);\n            console.log(`(x1: ${item.p1.x}, y1: ${item.p1.y}, color1: [${item.p1.color}], h1: ${item.p0.h})`);\n        })\n    }\n\n    for (let i = 0; i < lineArr.length; i ++) {\n        console.log(`lineArr Line ${i}`);\n        console.log(`(x0: ${lineArr[i].p0.x}, y0: ${lineArr[i].p0.y}, color0: [${lineArr[i].p0.color}], h0: ${lineArr[i].p0.h})`);\n        console.log(`(x1: ${lineArr[i].p1.x}, y1: ${lineArr[i].p1.y}, color1: [${lineArr[i].p1.color}], h1: ${lineArr[i].p0.h})`);\n        console.log(\"\");\n    }\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas\n                lineArr={lineArr}\n                width={canvasSize.x}\n                height={canvasSize.y}\n            />\n            {lineArr.map((item: Line, index: number) => (\n                <React.Fragment>\n                    <LineField\n                        lineIndex={index}\n                        line={item}\n                        handleChangeLine={handleChangeLine}\n                    />\n                </React.Fragment>\n            ))}\n            <button type=\"button\" onClick={handleAddLine}>\n                Add Line\n            </button>\n            <button onClick={printLines}>Print Lines</button>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}