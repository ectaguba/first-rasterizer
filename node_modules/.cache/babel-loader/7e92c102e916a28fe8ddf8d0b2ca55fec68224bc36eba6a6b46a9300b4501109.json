{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/react_exercises_for_beginners/src/App11/App11.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Hero from \"./components/Hero\";\nimport SearchForm from \"./components/SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App11() {\n  _s();\n  const [forecasts, setForecasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getWeatherForecasts = async city => {\n    try {\n      const response = await fetch(`https://goweather.herokuapp.com/weather/${encodeURIComponent(city)}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n    } catch {} finally {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App11, \"zgKyEpbjhJfO2adS3bUu5kLWeqA=\");\n_c = App11;\nexport default App11;\nvar _c;\n$RefreshReg$(_c, \"App11\");","map":{"version":3,"names":["React","useState","Hero","SearchForm","jsxDEV","_jsxDEV","App11","_s","forecasts","setForecasts","loading","setLoading","error","setError","getWeatherForecasts","city","response","fetch","encodeURIComponent","ok","Error","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/react_exercises_for_beginners/src/App11/App11.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Hero from \"./components/Hero\";\nimport SearchForm from \"./components/SearchForm\";\n\nfunction App11() {\n\n  const [forecasts, setForecasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getWeatherForecasts = async (city) => {\n    try {\n      const response = await fetch(`https://goweather.herokuapp.com/weather/${encodeURIComponent(city)}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n    } catch {\n\n    } finally {\n\n    }\n  }\n\n  return (\n    <div>\n      <Hero />\n      <SearchForm />\n    </div>\n  );\n}\n\nexport default App11;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CC,kBAAkB,CAACH,IAAI,CAAE,EAAC,CAAC;MACnG,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,MAAM,CAER,CAAC,SAAS,CAEV;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACH,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRtB,OAAA,CAACF,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACpB,EAAA,CA1BQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA4Bd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}