{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/react_exercises_for_beginners/src/App11/App11.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport SearchForm from \"./components/SearchForm/SearchForm.jsx\";\nimport WeatherResults from \"./components/WeatherResults/WeatherResults.jsx\";\nimport ErrorMessage from \"./components/ErrorMessage/ErrorMessage.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App11() {\n  _s();\n  const defaultCity = \"New York\";\n\n  // States\n  const [currCity, setCurrCity] = useState(defaultCity);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Side effects\n  useEffect(() => {\n    getWeatherForecasts(currCity);\n  }, []);\n\n  // Data fetch\n  const getWeatherForecasts = async city => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`https://goweather.herokuapp.com/weather/${encodeURIComponent(city)}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json(); // returns object\n      setCurrCity(city);\n      setResults(data);\n    } catch (e) {\n      setError(`Failed to fetch forecast data for ${city}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      getWeatherForecasts: getWeatherForecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherResults, {\n      currCity: currCity,\n      loading: loading,\n      results: results,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App11, \"aHdvDl8S8kTlGwvj8Eq+yjCn5t8=\");\n_c = App11;\nexport default App11;\nvar _c;\n$RefreshReg$(_c, \"App11\");","map":{"version":3,"names":["React","useState","useEffect","Hero","SearchForm","WeatherResults","ErrorMessage","jsxDEV","_jsxDEV","App11","_s","defaultCity","currCity","setCurrCity","results","setResults","loading","setLoading","error","setError","getWeatherForecasts","city","response","fetch","encodeURIComponent","ok","Error","data","json","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/react_exercises_for_beginners/src/App11/App11.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport SearchForm from \"./components/SearchForm/SearchForm.jsx\";\nimport WeatherResults from \"./components/WeatherResults/WeatherResults.jsx\";\nimport ErrorMessage from \"./components/ErrorMessage/ErrorMessage.jsx\";\n\nfunction App11() {\n\n  const defaultCity = \"New York\"\n\n  // States\n  const [currCity, setCurrCity] = useState(defaultCity);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Side effects\n  useEffect(() => {\n    getWeatherForecasts(currCity);\n  }, [])\n\n  // Data fetch\n  const getWeatherForecasts = async (city) => {\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`https://goweather.herokuapp.com/weather/${encodeURIComponent(city)}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json(); // returns object\n      setCurrCity(city);\n      setResults(data);\n    } catch (e) {\n      setError(`Failed to fetch forecast data for ${city}`);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div>\n      <Hero />\n      <SearchForm\n        getWeatherForecasts={getWeatherForecasts}\n      />\n      <WeatherResults\n        currCity={currCity}\n        loading={loading}\n        results={results}\n        error={error}\n      />\n      <ErrorMessage\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default App11;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,cAAc,MAAM,gDAAgD;AAC3E,OAAOC,YAAY,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAMC,WAAW,GAAG,UAAU;;EAE9B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACU,WAAW,CAAC;EACrD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACdkB,mBAAmB,CAACR,QAAQ,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAE1CJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CC,kBAAkB,CAACH,IAAI,CAAE,EAAC,CAAC;MACnG,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCf,WAAW,CAACQ,IAAI,CAAC;MACjBN,UAAU,CAACY,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVV,QAAQ,CAAE,qCAAoCE,IAAK,EAAC,CAAC;IACvD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACET,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACL,IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACR1B,OAAA,CAACJ,UAAU;MACTgB,mBAAmB,EAAEA;IAAoB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF1B,OAAA,CAACH,cAAc;MACbO,QAAQ,EAAEA,QAAS;MACnBI,OAAO,EAAEA,OAAQ;MACjBF,OAAO,EAAEA,OAAQ;MACjBI,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACF1B,OAAA,CAACF,YAAY;MACXY,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxB,EAAA,CArDQD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAuDd,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}