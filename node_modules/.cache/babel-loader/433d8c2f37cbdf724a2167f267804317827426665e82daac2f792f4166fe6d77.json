{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  width,\n  height\n}) => {\n  _s();\n  // obtain reference to canvas node\n  const canvasRef = useRef(null);\n\n  // render after state (canvas size, scene objects, etc.) changes\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      if (!context) return; // prevents null error in canvasBuffer\n\n      const canvasBuffer = context.getImageData(0, 0, canvas.width, canvas.height);\n      const canvasPitch = canvasBuffer.width * 4;\n      const putPixel = (x, y, color) => {\n        x = canvas.width / 2 + (x | 0);\n        y = canvas.height / 2 - (y | 0) - 1;\n        if (x < 0 || x >= canvas.width || y < 0 || y >= canvas.height) {\n          return;\n        }\n        var offset = 4 * x + canvasPitch * y;\n        canvasBuffer.data[offset++] = color[0];\n        canvasBuffer.data[offset++] = color[1];\n        canvasBuffer.data[offset++] = color[2];\n        canvasBuffer.data[offset++] = 255; // Alpha\n      };\n      const updateCanvas = () => {\n        context.putImageData(canvasBuffer, 0, 0);\n      };\n      const interpolate = (i0, d0, i1, d1) => {\n        // single value d = f(i)\n        if (i0 == i1) return [d0];\n        const values = [];\n        const a = (d1 - d0) / (i1 - i0);\n        let d = d0;\n\n        // for each step x/y, increase y/x by slope a\n        for (let i = i0; i < i1; i++) {\n          values.push(d);\n          d += a;\n        }\n        return values;\n      };\n      const drawLine = (p0, p1, color) => {\n        const dx = p1.x - p0.x;\n        const dy = p1.y - p0.y;\n        if (Math.abs(dx) > Math.abs(dy)) {\n          // line is more horizontal\n          if (p0.x > p1.x) {\n            [p0.x, p1.x] = [p1.x, p0.x]; // swap\n          }\n          const ys = interpolate(p0.x, p0.y, p1.x, p1.y);\n          for (let x = p0.x; x < p1.x; x++) {\n            canvas.putPixel();\n          }\n        } else {\n          // line is more vertical\n        }\n      };\n\n      // Call DrawLine and UpdateCanvas with your desired parameters\n      drawLine({\n        x: -200,\n        y: -100\n      }, {\n        x: 240,\n        y: 120\n      }, [0, 0, 0]);\n      drawLine({\n        x: -50,\n        y: -200\n      }, {\n        x: 60,\n        y: 240\n      }, [0, 0, 0]);\n      updateCanvas();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: width,\n      height: height,\n      style: {\n        display: 'block',\n        margin: 'auto',\n        border: '1px grey solid'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Canvas","width","height","_s","canvasRef","current","canvas","context","getContext","canvasBuffer","getImageData","canvasPitch","putPixel","x","y","color","offset","data","updateCanvas","putImageData","interpolate","i0","d0","i1","d1","values","a","d","i","push","drawLine","p0","p1","dx","dy","Math","abs","ys","className","children","ref","style","display","margin","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ninterface CanvasProps {\n    width: number;\n    height: number;\n}\n\nconst Canvas: React.FC<CanvasProps> = ({ width, height }) => {\n\n    // obtain reference to canvas node\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // render after state (canvas size, scene objects, etc.) changes\n    useEffect(() => {\n        if (canvasRef.current) {\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n\n            if (!context) return; // prevents null error in canvasBuffer\n\n            const canvasBuffer = context.getImageData(0, 0, canvas.width, canvas.height);\n            const canvasPitch = canvasBuffer.width * 4;\n\n            const putPixel = (x: number, y: number, color: number[]) : void => {\n\n                x = canvas.width / 2 + (x | 0);\n                y = canvas.height / 2 - (y | 0) - 1;\n\n                if (x < 0 || x >= canvas.width || y < 0 || y >= canvas.height) {\n                    return;\n                }\n\n                var offset = 4 * x + canvasPitch * y;\n                canvasBuffer.data[offset++] = color[0];\n                canvasBuffer.data[offset++] = color[1];\n                canvasBuffer.data[offset++] = color[2];\n                canvasBuffer.data[offset++] = 255; // Alpha\n                \n            };\n\n            const updateCanvas = () => {\n                context.putImageData(canvasBuffer, 0, 0);\n            };\n\n            const interpolate = (i0: number, d0: number, i1: number, d1: number) : number[] => {\n\n                // single value d = f(i)\n                if (i0 == i1) return [d0];\n\n                const values: number[] = [];\n                const a: number = (d1 - d0) / (i1 - i0);\n                let d = d0;\n\n                // for each step x/y, increase y/x by slope a\n                for (let i = i0; i < i1; i++) {\n                    values.push(d);\n                    d += a;\n                }\n\n                return values;\n\n            };\n\n            const drawLine = (p0: { x: number; y: number }, p1: { x: number; y: number }, color: number[]) : void => {\n\n                const dx: number = p1.x - p0.x;\n                const dy: number = p1.y - p0.y;\n\n                if (Math.abs(dx) > Math.abs(dy)) {\n\n                    // line is more horizontal\n                    if (p0.x > p1.x) {\n                        [p0.x, p1.x] = [p1.x, p0.x]; // swap\n                    }\n\n                    const ys: number[] = interpolate(p0.x, p0.y, p1.x, p1.y);\n\n                    for (let x = p0.x; x < p1.x; x++) {\n                        canvas.putPixel()\n                    }\n                    \n                } else {\n                    // line is more vertical\n                }\n\n            };\n\n            // Call DrawLine and UpdateCanvas with your desired parameters\n            drawLine({ x: -200, y: -100 }, { x: 240, y: 120 }, [0, 0, 0]);\n            drawLine({ x: -50, y: -200 }, { x: 60, y: 240 }, [0, 0, 0]);\n\n            updateCanvas();\n        }\n    }, []);\n\n    return (\n        <div className=\"centered\">\n            <canvas\n                ref={canvasRef}\n                width={width}\n                height={height}\n                style={{\n                    display: 'block',\n                    margin: 'auto',\n                    border: '1px grey solid'\n                }}\n            >\n            </canvas>\n        </div>\n    );\n};\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}