{"ast":null,"code":"import{Pixel}from\"./Pixel.tsx\";export class Line{constructor(p0,p1){this._p0=void 0;this._p1=void 0;this._p0=p0;this._p1=p1;}get p0(){return this._p0;}get p1(){return this._p1;}set p0(newP0){this._p0=newP0;}set p1(newP1){this._p1=newP1;}updatePoint(point,axis,value){let newP0=new Pixel(this._p0.x,this._p0.y);let newP1=new Pixel(this._p1.x,this._p1.y);if(point===0){if(axis==='x'){newP0=new Pixel(value,this._p0.y);}else if(axis==='y'){newP0=new Pixel(this._p0.x,value);}}else if(point===1){if(axis==='x'){newP1=new Pixel(value,this._p1.y);}else if(axis==='y'){newP1=new Pixel(this._p1.x,value);}}return new Line(newP0,newP1);}}","map":{"version":3,"names":["Pixel","Line","constructor","p0","p1","_p0","_p1","newP0","newP1","updatePoint","point","axis","value","x","y"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/Line.tsx"],"sourcesContent":["import { Pixel } from \"./Pixel.tsx\";\n\nexport class Line {\n\n    private _p0: Pixel;\n    private _p1: Pixel;\n\n    constructor(p0: Pixel, p1: Pixel) {\n        this._p0 = p0;\n        this._p1 = p1;\n    }\n\n    get p0(): Pixel {\n        return this._p0;\n    }\n\n    get p1(): Pixel {\n        return this._p1;\n    }\n\n    set p0(newP0: Pixel) {\n        this._p0 = newP0;\n    }\n\n    set p1(newP1: Pixel) {\n        this._p1 = newP1;\n    }\n\n    updatePoint(point: number, axis: string, value: number): Line {\n        let newP0: Pixel = new Pixel(this._p0.x, this._p0.y);\n        let newP1: Pixel = new Pixel(this._p1.x, this._p1.y);    \n\n        if (point === 0) {\n            if (axis === 'x') {\n                newP0 = new Pixel(value, this._p0.y);\n            } else if (axis === 'y') {\n                newP0 = new Pixel(this._p0.x, value);\n            }\n        } else if (point === 1) {\n            if (axis === 'x') {\n                newP1 = new Pixel(value, this._p1.y);\n            } else if (axis === 'y') {\n                newP1 = new Pixel(this._p1.x, value);\n            }\n        }\n        \n        return new Line(newP0, newP1);\n    }\n}\n\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,aAAa,CAEnC,MAAO,MAAM,CAAAC,IAAK,CAKdC,WAAWA,CAACC,EAAS,CAAEC,EAAS,CAAE,MAH1BC,GAAG,aACHC,GAAG,QAGP,IAAI,CAACD,GAAG,CAAGF,EAAE,CACb,IAAI,CAACG,GAAG,CAAGF,EAAE,CACjB,CAEA,GAAI,CAAAD,EAAEA,CAAA,CAAU,CACZ,MAAO,KAAI,CAACE,GAAG,CACnB,CAEA,GAAI,CAAAD,EAAEA,CAAA,CAAU,CACZ,MAAO,KAAI,CAACE,GAAG,CACnB,CAEA,GAAI,CAAAH,EAAEA,CAACI,KAAY,CAAE,CACjB,IAAI,CAACF,GAAG,CAAGE,KAAK,CACpB,CAEA,GAAI,CAAAH,EAAEA,CAACI,KAAY,CAAE,CACjB,IAAI,CAACF,GAAG,CAAGE,KAAK,CACpB,CAEAC,WAAWA,CAACC,KAAa,CAAEC,IAAY,CAAEC,KAAa,CAAQ,CAC1D,GAAI,CAAAL,KAAY,CAAG,GAAI,CAAAP,KAAK,CAAC,IAAI,CAACK,GAAG,CAACQ,CAAC,CAAE,IAAI,CAACR,GAAG,CAACS,CAAC,CAAC,CACpD,GAAI,CAAAN,KAAY,CAAG,GAAI,CAAAR,KAAK,CAAC,IAAI,CAACM,GAAG,CAACO,CAAC,CAAE,IAAI,CAACP,GAAG,CAACQ,CAAC,CAAC,CAEpD,GAAIJ,KAAK,GAAK,CAAC,CAAE,CACb,GAAIC,IAAI,GAAK,GAAG,CAAE,CACdJ,KAAK,CAAG,GAAI,CAAAP,KAAK,CAACY,KAAK,CAAE,IAAI,CAACP,GAAG,CAACS,CAAC,CAAC,CACxC,CAAC,IAAM,IAAIH,IAAI,GAAK,GAAG,CAAE,CACrBJ,KAAK,CAAG,GAAI,CAAAP,KAAK,CAAC,IAAI,CAACK,GAAG,CAACQ,CAAC,CAAED,KAAK,CAAC,CACxC,CACJ,CAAC,IAAM,IAAIF,KAAK,GAAK,CAAC,CAAE,CACpB,GAAIC,IAAI,GAAK,GAAG,CAAE,CACdH,KAAK,CAAG,GAAI,CAAAR,KAAK,CAACY,KAAK,CAAE,IAAI,CAACN,GAAG,CAACQ,CAAC,CAAC,CACxC,CAAC,IAAM,IAAIH,IAAI,GAAK,GAAG,CAAE,CACrBH,KAAK,CAAG,GAAI,CAAAR,KAAK,CAAC,IAAI,CAACM,GAAG,CAACO,CAAC,CAAED,KAAK,CAAC,CACxC,CACJ,CAEA,MAAO,IAAI,CAAAX,IAAI,CAACM,KAAK,CAAEC,KAAK,CAAC,CACjC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}