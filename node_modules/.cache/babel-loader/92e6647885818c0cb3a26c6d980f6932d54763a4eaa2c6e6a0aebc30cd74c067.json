{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx\";\n// Canvas.tsx\nimport React from 'react';\nimport Pixel from './Pixel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  width,\n  height\n}) => {\n  // Generate an array of coordinates for pixels\n  const pixels = [];\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      pixels.push({\n        x,\n        y,\n        color: 'black'\n      }); // You can set the initial color as needed\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: `${width * 10}px`,\n      height: `${height * 10}px`\n    },\n    children: pixels.map(pixel => /*#__PURE__*/_jsxDEV(Pixel, {\n      ...pixel\n    }, `${pixel.x}-${pixel.y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","Pixel","jsxDEV","_jsxDEV","Canvas","width","height","pixels","y","x","push","color","style","position","children","map","pixel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx"],"sourcesContent":["// Canvas.tsx\nimport React from 'react';\nimport Pixel from './Pixel';\n\ninterface CanvasProps {\n  width: number;\n  height: number;\n}\n\nconst Canvas: React.FC<CanvasProps> = ({ width, height }) => {\n  // Generate an array of coordinates for pixels\n  const pixels = [];\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      pixels.push({ x, y, color: 'black' }); // You can set the initial color as needed\n    }\n  }\n\n  return (\n    <div style={{ position: 'relative', width: `${width * 10}px`, height: `${height * 10}px` }}>\n      {pixels.map((pixel) => (\n        <Pixel key={`${pixel.x}-${pixel.y}`} {...pixel} />\n      ))}\n    </div>\n  );\n};\n\nexport default Canvas;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5B,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAC3D;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,EAAE,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;MAC9BF,MAAM,CAACG,IAAI,CAAC;QAAED,CAAC;QAAED,CAAC;QAAEG,KAAK,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IACzC;EACF;EAEA,oBACER,OAAA;IAAKS,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAER,KAAK,EAAG,GAAEA,KAAK,GAAG,EAAG,IAAG;MAAEC,MAAM,EAAG,GAAEA,MAAM,GAAG,EAAG;IAAI,CAAE;IAAAQ,QAAA,EACxFP,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBAChBb,OAAA,CAACF,KAAK;MAAA,GAAmCe;IAAK,GAAjC,GAAEA,KAAK,CAACP,CAAE,IAAGO,KAAK,CAACR,CAAE,EAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAhBIjB,MAA6B;AAkBnC,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}