{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PixelCanvas = ({\n  width,\n  height\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      if (context) {\n        // Draw a red pixel at coordinates (10, 10)\n        context.fillStyle = 'red';\n        context.fillRect(10, 10, 1, 1);\n\n        // Draw more pixels as needed\n        // context.fillRect(x, y, 1, 1);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(PixelCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PixelCanvas;\nexport default PixelCanvas;\nvar _c;\n$RefreshReg$(_c, \"PixelCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","PixelCanvas","width","height","_s","canvasRef","current","context","getContext","fillStyle","fillRect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/Canvas.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\ninterface PixelCanvasProps {\n  width: number;\n  height: number;\n}\n\nconst PixelCanvas: React.FC<PixelCanvasProps> = ({ width, height }) => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n\n      if (context) {\n        // Draw a red pixel at coordinates (10, 10)\n        context.fillStyle = 'red';\n        context.fillRect(10, 10, 1, 1);\n\n        // Draw more pixels as needed\n        // context.fillRect(x, y, 1, 1);\n      }\n    }\n  }, []);\n\n  return <canvas ref={canvasRef} width={width} height={height} />;\n};\n\nexport default PixelCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOjD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAMC,SAAS,GAAGR,MAAM,CAA2B,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,OAAO,GAAGF,SAAS,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAElD,IAAID,OAAO,EAAE;QACX;QACAA,OAAO,CAACE,SAAS,GAAG,KAAK;QACzBF,OAAO,CAACG,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;;QAE9B;QACA;MACF;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA;IAAQW,GAAG,EAAEN,SAAU;IAACH,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAACX,EAAA,CAnBIH,WAAuC;AAAAe,EAAA,GAAvCf,WAAuC;AAqB7C,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}