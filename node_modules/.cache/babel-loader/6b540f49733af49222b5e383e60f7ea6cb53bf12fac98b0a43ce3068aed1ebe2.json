{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineField = ({\n  lineIndex,\n  line,\n  handleChangeLine\n}) => {\n  const handlePointChange = (point, property, value) => {\n    handleChangeLine(lineIndex, point, property, value);\n  };\n  const rgbToHex = rgb => {\n    // Ensure the RGB array has three values\n    if (rgb.length !== 3) {\n      throw new Error('RGB array must have three values (red, green, blue)');\n    }\n\n    // Convert each RGB component to a two-digit hex value\n    const hexComponents = rgb.map(component => {\n      const hex = component.toString(16).toUpperCase();\n      return hex.length === 1 ? '0' + hex : hex;\n    });\n\n    // Concatenate the hex components to form the final hex color string\n    return '#' + hexComponents.join('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"LineField\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Line \", lineIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p0.x,\n          onChange: e => handlePointChange(0, 'x', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p0.y,\n          onChange: e => handlePointChange(0, 'y', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"h0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.0\",\n          max: \"1.0\",\n          step: \"0.1\",\n          value: line.p0.h,\n          onChange: e => handlePointChange(0, 'h', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color 0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: rgbToHex(line.p0.color),\n          onChange: e => {\n            handlePointChange(0, 'color', e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p1.x,\n          onChange: e => handlePointChange(1, 'x', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p1.y,\n          onChange: e => handlePointChange(1, 'y', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"h1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.0\",\n          max: \"1.0\",\n          step: \"0.1\",\n          value: line.p1.h,\n          onChange: e => handlePointChange(1, 'h', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: rgbToHex(line.p1.color),\n          onChange: e => {\n            handlePointChange(1, 'color', e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 1\n  }, this);\n};\n_c = LineField;\nexport default LineField;\nvar _c;\n$RefreshReg$(_c, \"LineField\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LineField","lineIndex","line","handleChangeLine","handlePointChange","point","property","value","rgbToHex","rgb","length","Error","hexComponents","map","component","hex","toString","toUpperCase","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","p0","x","onChange","e","target","y","min","max","step","h","color","p1","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from './Line.tsx';\n\ninterface LineFieldProps {\n    lineIndex: number;\n    line: Line;\n    handleChangeLine: (\n        index: number,\n        point: number,\n        property: 'x' | 'y' | 'h' | 'color',\n        value: string | number\n    ) => void;\n}\n\nconst LineField: React.FC<LineFieldProps> = ({ lineIndex, line, handleChangeLine }) => {\n\n    const handlePointChange = (\n        point: number,\n        property: 'x' | 'y' | 'h' | 'color',\n        value: string | number\n    ): void => {\n        handleChangeLine(lineIndex, point, property, value);\n    };\n\n    const rgbToHex = (rgb: number[]): string => {\n        // Ensure the RGB array has three values\n        if (rgb.length !== 3) {\n            throw new Error('RGB array must have three values (red, green, blue)');\n        }\n\n        // Convert each RGB component to a two-digit hex value\n        const hexComponents = rgb.map(component => {\n            const hex = component.toString(16).toUpperCase();\n            return hex.length === 1 ? '0' + hex : hex;\n        });\n\n        // Concatenate the hex components to form the final hex color string\n        return '#' + hexComponents.join('');\n    }\n\n    return (\n<form className=\"LineField\">\n<h3>Line {lineIndex}</h3>\n<div>\n<label>\nx0:\n<input\ntype=\"text\"\nvalue={line.p0.x}\nonChange={(e) =>\nhandlePointChange(0, 'x', e.target.value)\n}\n/>\n</label>\n<label>\ny0:\n<input\ntype=\"text\"\nvalue={line.p0.y}\nonChange={(e) =>\nhandlePointChange(0, 'y', e.target.value)\n}\n/>\n</label>\n<label>\nh0:\n<input\ntype=\"number\"\nmin=\"0.0\"\nmax=\"1.0\"\nstep=\"0.1\"\nvalue={line.p0.h}\nonChange={(e) =>\nhandlePointChange(0, 'h', e.target.value)\n}\n/>\n</label>\n<label>\nColor 0:\n<input\ntype=\"color\"\nvalue={rgbToHex(line.p0.color)}\nonChange={(e) => {\nhandlePointChange(0, 'color', e.target.value)\n}}\n/>\n</label>\n</div>\n<div>\n<label>\nx1:\n<input\ntype=\"text\"\nvalue={line.p1.x}\nonChange={(e) =>\nhandlePointChange(1, 'x', e.target.value)\n}\n/>\n</label>\n<label>\ny1:\n<input\ntype=\"text\"\nvalue={line.p1.y}\nonChange={(e) =>\nhandlePointChange(1, 'y', e.target.value)\n}\n/>\n</label>\n<label>\nh1:\n<input\ntype=\"number\"\nmin=\"0.0\"\nmax=\"1.0\"\nstep=\"0.1\"\nvalue={line.p1.h}\nonChange={(e) =>\nhandlePointChange(1, 'h', e.target.value)\n}\n/>\n</label>\n<label>\nColor 1:\n<input\ntype=\"color\"\nvalue={rgbToHex(line.p1.color)}\nonChange={(e) => {\nhandlePointChange(1, 'color', e.target.value)\n}}\n/>\n</label>\n</div>\n<div>\n</div>\n</form>\n    );\n};\n\nexport default LineField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}