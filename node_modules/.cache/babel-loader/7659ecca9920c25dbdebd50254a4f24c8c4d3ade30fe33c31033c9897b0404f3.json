{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineTest.tsx\",\n  _s = $RefreshSig$();\nimport { Pixel } from \"./Pixel.tsx\";\nimport { Line } from \"./Line.tsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineTest = () => {\n  _s();\n  const [lineArr, setLineArr] = useState([new Line(new Pixel(0, 0), new Pixel(10, 10)), new Line(new Pixel(0, 0), new Pixel(20, 20)), new Line(new Pixel(0, 0), new Pixel(30, 30))]);\n  const handleChangeLine = (index, point, axis, value) => {\n    setLineArr(prevLineArr => {\n      const updatedLines = prevLineArr.map((line, i) => {\n        // i === index ? line.updatePoint(point, axis, value) : line\n        if (i === index) {\n          return line.updatePoint(point, axis, value);\n        } else {\n          return line;\n        }\n      });\n      return updatedLines;\n    });\n  };\n  console.log(lineArr);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      handleChangeLine(0, 0, 'x', 5);\n      handleChangeLine(0, 0, 'y', 5);\n      handleChangeLine(0, 1, 'x', 15);\n      handleChangeLine(0, 1, 'y', 15);\n      handleChangeLine(1, 0, 'x', Number(18));\n      handleChangeLine(1, 0, 'y', Number(18));\n      handleChangeLine(1, 1, 'x', Number(25));\n      handleChangeLine(1, 1, 'y', Number(25));\n      handleChangeLine(2, 0, 'x', Number(22));\n      handleChangeLine(2, 0, 'y', 22);\n      handleChangeLine(2, 1, 'x', 34);\n      handleChangeLine(2, 1, 'y', 34);\n    },\n    children: \"Line Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(LineTest, \"/WMjxBL4Y93Wt2l+efOMP6um3QU=\");\n_c = LineTest;\nexport default LineTest;\nvar _c;\n$RefreshReg$(_c, \"LineTest\");","map":{"version":3,"names":["Pixel","Line","React","useState","jsxDEV","_jsxDEV","LineTest","_s","lineArr","setLineArr","handleChangeLine","index","point","axis","value","prevLineArr","updatedLines","map","line","i","updatePoint","console","log","onClick","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineTest.tsx"],"sourcesContent":["import { Pixel } from \"./Pixel.tsx\"\nimport { Line } from \"./Line.tsx\"\nimport React, { useState } from \"react\";\n\nconst LineTest = () => {\n\n    const [lineArr, setLineArr] = useState<Line[]>([\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(10, 10)\n        ),\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(20, 20)\n        ),\n        new Line(\n            new Pixel(0, 0), \n            new Pixel(30, 30)\n        ),\n    ]);\n    \n    const handleChangeLine = (index: number, point: number, axis: string, value: number): void => {\n        setLineArr((prevLineArr) => {\n            const updatedLines = prevLineArr.map((line, i) => {\n                // i === index ? line.updatePoint(point, axis, value) : line\n                if (i === index) {\n                    return line.updatePoint(point, axis, value);\n                } else {\n                    return line;\n                }\n            });\n            return updatedLines;\n        });\n    };\n    \n    console.log(lineArr);\n\n    return (\n        <button onClick={() => {          \n            handleChangeLine(0, 0, 'x', 5);\n            handleChangeLine(0, 0, 'y', 5);\n            \n            handleChangeLine(0, 1, 'x', 15);\n            handleChangeLine(0, 1, 'y', 15);\n            \n            handleChangeLine(1, 0, 'x', Number(18));\n            handleChangeLine(1, 0, 'y', Number(18));\n            \n            handleChangeLine(1, 1, 'x', Number(25));\n            handleChangeLine(1, 1, 'y', Number(25));\n\n            handleChangeLine(2, 0, 'x', Number(22));\n            handleChangeLine(2, 0, 'y', 22);\n            \n            handleChangeLine(2, 1, 'x', 34);\n            handleChangeLine(2, 1, 'y', 34);\n        }}>\n            Line Test\n        </button>\n    )\n}\n\nexport default LineTest;"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,IAAI,QAAQ,YAAY;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAS,CAC3C,IAAIF,IAAI,CACJ,IAAID,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACf,IAAIA,KAAK,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC,EACD,IAAIC,IAAI,CACJ,IAAID,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACf,IAAIA,KAAK,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC,EACD,IAAIC,IAAI,CACJ,IAAID,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACf,IAAIA,KAAK,CAAC,EAAE,EAAE,EAAE,CACpB,CAAC,CACJ,CAAC;EAEF,MAAMU,gBAAgB,GAAGA,CAACC,KAAa,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa,KAAW;IAC1FL,UAAU,CAAEM,WAAW,IAAK;MACxB,MAAMC,YAAY,GAAGD,WAAW,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QAC9C;QACA,IAAIA,CAAC,KAAKR,KAAK,EAAE;UACb,OAAOO,IAAI,CAACE,WAAW,CAACR,KAAK,EAAEC,IAAI,EAAEC,KAAK,CAAC;QAC/C,CAAC,MAAM;UACH,OAAOI,IAAI;QACf;MACJ,CAAC,CAAC;MACF,OAAOF,YAAY;IACvB,CAAC,CAAC;EACN,CAAC;EAEDK,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;EAEpB,oBACIH,OAAA;IAAQkB,OAAO,EAAEA,CAAA,KAAM;MACnBb,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC9BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAE9BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAC/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAE/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEc,MAAM,CAAC,EAAE,CAAC,CAAC;MACvCd,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEc,MAAM,CAAC,EAAE,CAAC,CAAC;MAEvCd,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEc,MAAM,CAAC,EAAE,CAAC,CAAC;MACvCd,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEc,MAAM,CAAC,EAAE,CAAC,CAAC;MAEvCd,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEc,MAAM,CAAC,EAAE,CAAC,CAAC;MACvCd,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAE/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAC/BA,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;IACnC,CAAE;IAAAe,QAAA,EAAC;EAEH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAAAtB,EAAA,CAxDKD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}