{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineField = ({\n  lineIndex,\n  line,\n  handleChangeLine\n}) => {\n  const handlePointChange = (point, property, value) => {\n    handleChangeLine(lineIndex, point, property, value);\n  };\n  const rgbToHex = rgb => {\n    // Ensure the RGB array has three values\n    if (rgb.length !== 3) {\n      throw new Error('RGB array must have three values (red, green, blue)');\n    }\n\n    // Convert each RGB component to a two-digit hex value\n    const hexComponents = rgb.map(component => {\n      const hex = component.toString(16).toUpperCase();\n      return hex.length === 1 ? '0' + hex : hex;\n    });\n\n    // Concatenate the hex components to form the final hex color string\n    return '#' + hexComponents.join('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"LineField\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineFieldHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Line \", lineIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineFieldPt\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"(x0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p0.x,\n          onChange: e => handlePointChange(0, 'x', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y0:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p0.y,\n          onChange: e => handlePointChange(0, 'y', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineFieldPt\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p1.x,\n          onChange: e => handlePointChange(1, 'x', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: line.p1.y,\n          onChange: e => handlePointChange(1, 'y', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = LineField;\nexport default LineField;\nvar _c;\n$RefreshReg$(_c, \"LineField\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LineField","lineIndex","line","handleChangeLine","handlePointChange","point","property","value","rgbToHex","rgb","length","Error","hexComponents","map","component","hex","toString","toUpperCase","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","p0","x","onChange","e","target","y","p1","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from './Line.tsx';\n\ninterface LineFieldProps {\n    lineIndex: number;\n    line: Line;\n    handleChangeLine: (\n        index: number,\n        point: number,\n        property: 'x' | 'y' | 'h' | 'color',\n        value: string | number\n    ) => void;\n}\n\nconst LineField: React.FC<LineFieldProps> = ({ lineIndex, line, handleChangeLine }) => {\n\n    const handlePointChange = (\n        point: number,\n        property: 'x' | 'y' | 'h' | 'color',\n        value: string | number\n    ): void => {\n        handleChangeLine(lineIndex, point, property, value);\n    };\n\n    const rgbToHex = (rgb: number[]): string => {\n        // Ensure the RGB array has three values\n        if (rgb.length !== 3) {\n            throw new Error('RGB array must have three values (red, green, blue)');\n        }\n\n        // Convert each RGB component to a two-digit hex value\n        const hexComponents = rgb.map(component => {\n            const hex = component.toString(16).toUpperCase();\n            return hex.length === 1 ? '0' + hex : hex;\n        });\n\n        // Concatenate the hex components to form the final hex color string\n        return '#' + hexComponents.join('');\n    }\n\n    return (\n        <form className=\"LineField\">\n            <div className=\"LineFieldHeader\">\n                <h3>Line {lineIndex}</h3>\n            </div>\n            <div className=\"LineFieldPt\">\n                <label>\n                    (x0:\n                    <input\n                        type=\"text\"\n                        value={line.p0.x}\n                        onChange={(e) =>\n                            handlePointChange(0, 'x', e.target.value)\n                        }\n                    />\n                </label>\n                <label>\n                    y0:\n                    <input\n                        type=\"text\"\n                        value={line.p0.y}\n                        onChange={(e) =>\n                            handlePointChange(0, 'y', e.target.value)\n                        }\n                    />\n                </label>\n            </div>\n            <div className=\"LineFieldPt\">\n                <label>\n                    x1:\n                    <input\n                        type=\"text\"\n                        value={line.p1.x}\n                        onChange={(e) =>\n                            handlePointChange(1, 'x', e.target.value)\n                        }\n                    />\n                </label>\n                <label>\n                    y1:\n                    <input\n                        type=\"text\"\n                        value={line.p1.y}\n                        onChange={(e) =>\n                            handlePointChange(1, 'y', e.target.value)\n                        }\n                    />\n                </label>\n            </div>\n        </form>\n    );\n};\n\nexport default LineField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}