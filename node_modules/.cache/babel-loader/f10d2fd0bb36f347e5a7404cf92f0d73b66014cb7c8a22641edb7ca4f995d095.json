{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasSize = {\n    x: 640,\n    y: 480\n  };\n  const defaultP0 = new Pixel(0, 0);\n  const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n  const [lineArr, setLineArr] = useState([new Line(defaultP0, defaultP1)]);\n  const handleChangeLine = (index, point, axis, value) => {\n    setLineArr(prevLineArr => {\n      if (point == 0) {\n        // initial point\n        if (axis == \"x\") {} else {}\n      } else {\n        // final point\n        if (axis == \"x\") {} else {}\n      }\n    });\n  };\n  const handleAddLine = () => {\n    setLineArr([...lineArr, new Line(defaultP0, defaultP1)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Rasterizer in the Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      width: canvasSize.x,\n      height: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), lineArr.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Line \", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LineField, {\n        lineIndex: index,\n        handleLineChange: handleLineChange,\n        canvasWidth: canvasSize.x,\n        canvasHeight: canvasSize.y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addLineField,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"rpfJzJzZNC8D6LM9EkSWXQUYc/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","LineField","Pixel","Line","jsxDEV","_jsxDEV","App","_s","canvasSize","x","y","defaultP0","defaultP1","lineArr","setLineArr","handleChangeLine","index","point","axis","value","prevLineArr","handleAddLine","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","map","item","lineIndex","handleLineChange","canvasWidth","canvasHeight","type","onClick","addLineField","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\n\nconst App: React.FC = () => {\n\n    const canvasSize = { x: 640, y: 480 };\n\n    const defaultP0 = new Pixel(0, 0);\n    const defaultP1 = new Pixel(canvasSize.x / 2, canvasSize.y / 2);\n\n    const [lineArr, setLineArr] = useState<Line[]>([new Line(defaultP0, defaultP1)]);\n\n    const handleChangeLine = (\n        index: number,  \n        point: string | number, \n        axis: string,\n        value: string | number\n    ) => {\n        setLineArr((prevLineArr) => {\n            if (point == 0) {\n                // initial point\n                if (axis == \"x\") {\n                    \n                } else {\n\n                }\n            } else {\n                // final point\n                if (axis == \"x\") {\n\n                } else {\n                    \n                }\n            }\n        });\n    }\n\n    const handleAddLine = (): void => {\n        setLineArr([...lineArr, new Line(defaultP0, defaultP1)]);\n    }\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas\n                width={canvasSize.x}\n                height={canvasSize.y}\n            />\n            {lineArr.map((item: Line, index: number) => (\n                <div>\n                    <h3>Line {index}</h3>\n                    <LineField\n                        lineIndex={index}\n                        handleLineChange={handleLineChange}\n                        canvasWidth={canvasSize.x}\n                        canvasHeight={canvasSize.y}\n                    />\n                </div>\n            ))}\n            <button type=\"button\" onClick={addLineField}>\n                Add Line\n            </button>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}