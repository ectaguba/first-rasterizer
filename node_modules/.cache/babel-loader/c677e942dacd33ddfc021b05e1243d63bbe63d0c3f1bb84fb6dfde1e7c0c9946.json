{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/react_exercises_for_beginners/src/App10/App10.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GenerateImageBtn from \"./components/GenerateImageBtn\";\nimport DogImage from \"./components/DogImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App10() {\n  _s();\n  const [img, setImg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getRandomDogImage = async () => {\n    setLoading(true); // load before call\n    setError(null);\n    try {\n      const response = await fetch('https://dog.ceo/api/breeds/image/random');\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setImg(data.message);\n      } else {\n        setError('Failed to fetch image');\n      }\n    } catch (error) {\n      setError('Failed to fetch image');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleButtonClick = () => {\n    getRandomDogImage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(GenerateImageBtn, {\n      setImage: setImg,\n      loading: loading,\n      setLoading: setLoading,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DogImage, {\n      img: img,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App10, \"O3OoGIRfO7tYKzZ8gDVHbD+LtBU=\");\n_c = App10;\nexport default App10;\nvar _c;\n$RefreshReg$(_c, \"App10\");","map":{"version":3,"names":["React","useState","GenerateImageBtn","DogImage","jsxDEV","_jsxDEV","App10","_s","img","setImg","loading","setLoading","error","setError","getRandomDogImage","response","fetch","ok","Error","data","json","status","message","handleButtonClick","children","setImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/react_exercises_for_beginners/src/App10/App10.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport GenerateImageBtn from \"./components/GenerateImageBtn\";\nimport DogImage from \"./components/DogImage\";\n\nfunction App10() {\n\n  const [img, setImg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getRandomDogImage = async () => {\n\n    setLoading(true); // load before call\n    setError(null);\n\n    try {\n      const response = await fetch('https://dog.ceo/api/breeds/image/random');\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setImg(data.message);\n      } else {\n        setError('Failed to fetch image');\n      }\n    } catch (error) {\n      setError('Failed to fetch image');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const handleButtonClick = () => {\n    getRandomDogImage();\n  }\n\n  return (\n    <main>\n      <GenerateImageBtn\n        setImage={setImg}\n        loading={loading}\n        setLoading={setLoading}\n        setError={setError}\n      />\n      <br />\n      <br />\n      <DogImage \n        img={img}\n        error={error}\n      />\n    </main>\n  );\n}\n\nexport default App10;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAEpCH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;MACvE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;QAC7BZ,MAAM,CAACU,IAAI,CAACG,OAAO,CAAC;MACtB,CAAC,MAAM;QACLT,QAAQ,CAAC,uBAAuB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,oBACET,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACH,gBAAgB;MACfuB,QAAQ,EAAEhB,MAAO;MACjBC,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBE,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA,CAACF,QAAQ;MACPK,GAAG,EAAEA,GAAI;MACTI,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAACtB,EAAA,CAjDQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}