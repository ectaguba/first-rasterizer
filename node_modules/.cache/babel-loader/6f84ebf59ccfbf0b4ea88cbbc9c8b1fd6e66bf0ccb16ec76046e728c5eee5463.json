{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PointField from \"./PointField.tsx\";\nimport { Pixel } from './PIxel.tsx';\nimport { Line } from './Line.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineField = ({\n  lines,\n  setLines,\n  canvasWidth,\n  canvasHeight\n}) => {\n  _s();\n  const [point1, setPoint1] = useState(new Pixel(0, 0));\n  const [point2, setPoint2] = useState(new Pixel(canvasWidth / 2, canvasHeight / 2));\n  const [color, setColor] = useState('#000000');\n  const handleColorChange = e => {\n    setColor(e.target.value);\n  };\n  useEffect(() => {\n    setLines([[...lines], new Line(point1, point2)]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"LineField\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Point 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PointField, {\n        value: point1,\n        setPoint: setPoint1,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Point 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PointField, {\n        value: point2,\n        setPoint: setPoint2,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(LineField, \"N5GafVDpjMzROEMYFr7SfcbfTS4=\");\n_c = LineField;\nexport default LineField;\nvar _c;\n$RefreshReg$(_c, \"LineField\");","map":{"version":3,"names":["React","useState","useEffect","PointField","Pixel","Line","jsxDEV","_jsxDEV","LineField","lines","setLines","canvasWidth","canvasHeight","_s","point1","setPoint1","point2","setPoint2","color","setColor","handleColorChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setPoint","type","onChange","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/components/LineField.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport PointField from \"./PointField.tsx\";\nimport { Pixel } from './PIxel.tsx';\nimport { Line } from './Line.tsx';\n\ninterface LineFieldProps {\n    lines: Line[];\n    setLines: () => void;\n    canvasWidth: number;\n    canvasHeight: number;\n}\n\nconst LineField: React.FC<LineFieldProps> = ({lines, setLines, canvasWidth, canvasHeight}) => {\n\n    const [point1, setPoint1] = useState(new Pixel(0, 0));\n    const [point2, setPoint2] = useState(new Pixel(canvasWidth / 2, canvasHeight / 2));\n    const [color, setColor] = useState<string>('#000000'); \n\n    const handleColorChange = (e) => {\n        setColor(e.target.value);\n    }\n\n    useEffect(() => {\n        setLines([[...lines], new Line(point1, point2)]);\n    })\n\n    return (\n        <form className=\"LineField\">\n            <div>\n                <h3>Point 1</h3>\n                <PointField \n                    value={point1} \n                    setPoint={setPoint1} \n                    canvasWidth={canvasWidth}\n                    canvasHeight={canvasHeight}\n                />\n            </div>\n            <div>\n                <h3>Point 2</h3>\n                <PointField \n                    value={point2} \n                    setPoint={setPoint2} \n                    canvasWidth={canvasWidth}\n                    canvasHeight={canvasHeight}\n                />\n            </div>\n            <div>\n                <label>\n                    Color:\n                    <input type=\"color\" value={color} onChange={handleColorChange}/>\n                </label>\n            </div>\n        </form>\n    );\n}\n\nexport default LineField;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}