{"ast":null,"code":"import React,{useState}from'react';import Canvas from\"./components/Canvas.tsx\";import LineField from\"./components/LineField.tsx\";import{Pixel}from\"./components/Pixel.tsx\";import{Line}from\"./components/Line.tsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const canvasSize={x:640,y:480};const[lineArr,setLineArr]=useState([new Line(new Pixel(0,0),new Pixel(0,0))]);const handleChangeLine=(index,point,axis,value)=>{setLineArr(prevLineArr=>{const updatedLines=prevLineArr.map((line,i)=>{// i === index ? line.updatePoint(point, axis, value) : line\nif(i===index){return line.updatePoint(point,axis,value);}else{return line;}});return updatedLines;});};const handleAddLine=()=>{// initialize new pixel and line objects\nconst newLine=new Line(new Pixel(0,0),new Pixel(0,0));// insert into existing array\nsetLineArr(prevLineArr=>[...prevLineArr,newLine]);};const printLines=()=>{console.log(\"printLines:\");lineArr.map((item,index)=>{console.log(\"\".concat(index,\": (\").concat(item.p0.x,\", \").concat(item.p0.y,\"), (\").concat(item.p1.x,\", \").concat(item.p1.y,\")\"));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"center\"},children:\"Rasterizer in the Web\"}),/*#__PURE__*/_jsx(Canvas,{lineArr:lineArr,width:canvasSize.x,height:canvasSize.y}),lineArr.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"line-field-div\",children:/*#__PURE__*/_jsx(LineField,{lineIndex:index,line:item,handleChangeLine:handleChangeLine})},index)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleAddLine,children:\"Add Line\"}),/*#__PURE__*/_jsx(\"button\",{onClick:printLines,children:\"Print Lines\"})]});};export default App;","map":{"version":3,"names":["React","useState","Canvas","LineField","Pixel","Line","jsx","_jsx","jsxs","_jsxs","App","canvasSize","x","y","lineArr","setLineArr","handleChangeLine","index","point","axis","value","prevLineArr","updatedLines","map","line","i","updatePoint","handleAddLine","newLine","printLines","console","log","item","concat","p0","p1","children","style","textAlign","width","height","className","lineIndex","type","onClick"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport LineTest from './components/LineTest.tsx';\n\nconst App: React.FC = () => {\n\n    const canvasSize = { x: 640, y: 480 };\n\n    const [lineArr, setLineArr] = useState<Line[]>(\n        [new Line(\n            new Pixel(0, 0),\n            new Pixel(0, 0)\n        )]\n    );\n\n    const handleChangeLine = (index: number, point: number, axis: string, value: number): void => {\n        setLineArr((prevLineArr) => {\n            const updatedLines = prevLineArr.map((line, i) => {\n                // i === index ? line.updatePoint(point, axis, value) : line\n                if (i === index) {\n                    return line.updatePoint(point, axis, value);\n                } else {\n                    return line;\n                }\n            });\n            return updatedLines;\n        });\n    };\n\n    const handleAddLine = (): void => {\n        // initialize new pixel and line objects\n        const newLine = new Line(new Pixel(0, 0), new Pixel(0, 0));\n        // insert into existing array\n        setLineArr((prevLineArr) => [...prevLineArr, newLine]);\n    }\n\n    const printLines = (): void => {\n        console.log(\"printLines:\")\n        lineArr.map((item, index) => {\n            console.log(`${index}: (${item.p0.x}, ${item.p0.y}), (${item.p1.x}, ${item.p1.y})`)\n        })\n    }\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas\n                lineArr={lineArr}\n                width={canvasSize.x}\n                height={canvasSize.y}\n            />\n            {lineArr.map((item: Line, index: number) => (\n                <div className=\"line-field-div\" key={index}>\n                    <LineField\n                        lineIndex={index}\n                        line={item}\n                        handleChangeLine={handleChangeLine}\n                    />\n                </div>\n            ))}\n            <button type=\"button\" onClick={handleAddLine}>\n                Add Line\n            </button>\n            <button onClick={printLines}>Print Lines</button>\n            {/* <LineTest /> */}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}