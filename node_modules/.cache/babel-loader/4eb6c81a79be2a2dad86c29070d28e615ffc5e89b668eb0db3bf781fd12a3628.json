{"ast":null,"code":"var _jsxFileName = \"/Users/christaguba/repos/first-rasterizer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasSize = {\n    x: 640,\n    y: 480\n  };\n  const defaultP0 = new Pixel(0, 0);\n  const defaultP1 = new Pixel(0, 0);\n  const [lineArr, setLineArr] = useState([new Line(defaultP0, defaultP1)]);\n  const handleChangeLine = (index, point, axis, value) => {\n    setLineArr(prevLineArr => {\n      if (point == 0) {\n        // initial point\n        if (axis == \"x\") {\n          prevLineArr[index].p0.x = value;\n        } else {\n          prevLineArr[index].p0.y = value;\n        }\n      } else {\n        // final point\n        if (axis == \"x\") {\n          prevLineArr[index].p1.x = value;\n        } else {\n          prevLineArr[index].p1.y = value;\n        }\n      }\n      return prevLineArr;\n    });\n  };\n  const handleAddLine = () => {\n    setLineArr([...lineArr, new Line(defaultP0, defaultP1)]);\n  };\n  const printLines = () => {\n    lineArr.map((item, index) => {\n      console.log(`${index}: ${item.p0.x}, ${item.p0.x}, `);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Rasterizer in the Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      lineArr: lineArr,\n      width: canvasSize.x,\n      height: canvasSize.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), lineArr.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-field-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Line \", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LineField, {\n        lineIndex: index,\n        handleChangeLine: handleChangeLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddLine,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"print lines\",\n      onClick: printLines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"rpfJzJzZNC8D6LM9EkSWXQUYc/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","LineField","Pixel","Line","jsxDEV","_jsxDEV","App","_s","canvasSize","x","y","defaultP0","defaultP1","lineArr","setLineArr","handleChangeLine","index","point","axis","value","prevLineArr","p0","p1","handleAddLine","printLines","map","item","console","log","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","className","lineIndex","type","onClick","_c","$RefreshReg$"],"sources":["/Users/christaguba/repos/first-rasterizer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Canvas from \"./components/Canvas.tsx\";\nimport LineField from \"./components/LineField.tsx\";\nimport { Pixel } from \"./components/Pixel.tsx\";\nimport { Line } from \"./components/Line.tsx\";\n\nconst App: React.FC = () => {\n\n    const canvasSize = { x: 640, y: 480 };\n\n    const defaultP0 = new Pixel(0, 0);\n    const defaultP1 = new Pixel(0, 0);\n\n    const [lineArr, setLineArr] = useState<Line[]>([new Line(defaultP0, defaultP1)]);\n\n    const handleChangeLine = (\n        index: number,  \n        point: string | number, \n        axis: string,\n        value: number\n    ) => {\n        setLineArr((prevLineArr) => {\n            if (point == 0) {\n                // initial point\n                if (axis == \"x\") {\n                    prevLineArr[index].p0.x = value;\n                } else {\n                    prevLineArr[index].p0.y = value;\n                }\n            } else {\n                // final point\n                if (axis == \"x\") {\n                    prevLineArr[index].p1.x = value;\n                } else {\n                    prevLineArr[index].p1.y = value;\n                }\n            }\n            return prevLineArr;\n        });\n    }\n\n    const handleAddLine = (): void => {\n        setLineArr([...lineArr, new Line(defaultP0, defaultP1)]);\n    }\n\n    const printLines = (): void => {\n        lineArr.map((item,index) => {\n            console.log(`${index}: ${item.p0.x}, ${item.p0.x}, `)\n        })\n    }\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Rasterizer in the Web</h1>\n            <Canvas\n                lineArr={lineArr}\n                width={canvasSize.x}\n                height={canvasSize.y}\n            />\n            {lineArr.map((item: Line, index: number) => (\n                <div className=\"line-field-div\" key={index}>\n                    <h3>Line {index}</h3>\n                    <LineField\n                        lineIndex={index}\n                        handleChangeLine={handleChangeLine}\n                    />\n                </div>\n            ))}\n            <button type=\"button\" onClick={handleAddLine}>\n                Add Line\n            </button>\n            <button value=\"print lines\" onClick={printLines}></button>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}